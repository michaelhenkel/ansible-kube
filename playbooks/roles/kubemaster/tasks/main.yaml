---
- name: get control network
  set_fact:
    control_ip: "{{ ansible_all_ipv4_addresses | ipaddr(control_network) }}"
  when: control_network is defined

- name: set control ip
  set_fact:
    control_ip: "{{ control_ip[0] }}"

- name: get fqdn for control network
  shell: "python -c 'import socket; print socket.getfqdn(\"{{ control_ip }}\")'"
  register: output

- set_fact:
    control_fqdn: "{{ output.stdout }}"

- name: create control fqdn for all masters
  include: control_fqdn.yaml
  with_items:
    - "{{ groups['masters'] }}"

- name: get master of masters
  set_fact:
    master_of_masters: "{{ groups['masters'][0] }}"

- name: set master of masters fqn
  set_fact:
    master_of_masters_fqdn: "{{ hostvars[master_of_masters]['control_fqdn'] }}"

- name: get list of all nodes
  shell: kubectl get nodes || true
  register: nodes_list
  delegate_to: "{{ master_of_masters }}"

- name: check if master is in nodes list
  set_fact:
    master_in_list: "{{ item | regex_search( ansible_hostname ) }}"
  with_items: "{{ nodes_list.stdout_lines }}"

- name: create master if it doesn't exist
  include: create_master.yaml
  when: (master_in_list is defined and master_in_list != "") or master_in_list is undefined
